{
  "name": "g-messenger-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "type": "commonjs",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:repl": "npm run start:dev -- --entryFile repl",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "typeorm:seed": "ts-node -r tsconfig-paths/register node_modules/typeorm-extension/dist/cli/index.js seed -d ./src/config/orm-migration.config.ts",
    "migration:run": "npm run typeorm migration:run -- -d ./src/config/orm-migration.config.ts",
    "migration:generate": "npm run typeorm -- -d ./src/config/orm-migration.config.ts migration:generate ./src/modules/database/migrations/$npm_config_name",
    "migration:create": "npm run typeorm -- migration:create ./src/modules/database/migrations/$npm_config_name",
    "migration:revert": "npm run typeorm -- -d ./src/config/orm-migration.config.ts migration:revert",
    "docker:up": "docker-compose --env-file ./.env -f './docker/docker-compose.yml' up -d --build",
    "docker:down": "docker-compose --env-file ./.env -f './docker/docker-compose.yml' down"
  },
  "dependencies": {
    "@golevelup/ts-jest": "^0.3.4",
    "@liaoliaots/nestjs-redis": "^9.0.5",
    "@nestjs/common": "^9.0.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/jwt": "^10.0.1",
    "@nestjs/passport": "^9.0.2",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/platform-socket.io": "^9.3.12",
    "@nestjs/schedule": "^2.2.0",
    "@nestjs/swagger": "^6.2.1",
    "@nestjs/typeorm": "^9.0.1",
    "@nestjs/websockets": "^9.3.12",
    "@opentelemetry/api": "^1.4.0",
    "@socket.io/redis-adapter": "^8.1.0",
    "aws-sdk": "^2.1379.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dayjs": "^1.11.8",
    "dotenv": "^16.0.3",
    "env-var": "^7.3.0",
    "firebase-admin": "^11.5.0",
    "helmet": "^6.0.1",
    "ioredis": "^5.3.1",
    "logardian": "^4.0.0",
    "nestjs-asyncapi": "^1.1.1",
    "nestjs-typeorm-paginate": "^4.0.3",
    "node-fetch": "2.6.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.9.0",
    "randomstring": "^1.2.3",
    "redis": "^4.6.5",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.2.0",
    "sharp": "^0.32.5",
    "typeorm": "^0.3.12",
    "typeorm-extension": "^2.5.2",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^7.6.0",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/express": "^4.17.13",
    "@types/faker": "^6.6.9",
    "@types/jest": "29.2.4",
    "@types/multer": "^1.4.7",
    "@types/node": "18.11.18",
    "@types/node-fetch": "^2.6.2",
    "@types/passport-jwt": "^3.0.8",
    "@types/randomstring": "^1.1.8",
    "@types/redis": "^4.0.11",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "jest": "29.3.1",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "29.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.1",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
